{"version":3,"file":"angular-fire-remote-config.mjs","sources":["../../../src/remote-config/remote-config.ts","../../../src/remote-config/is-remote-config-supported-factory.ts","../../../src/remote-config/remote-config.module.ts","../../../src/remote-config/rxfire.ts","../../../src/remote-config/overrides.ts","../../../src/remote-config/firebase.ts","../../../src/remote-config/angular-fire-remote-config.ts"],"sourcesContent":["import { ɵgetAllInstancesOf } from '@angular/fire';\nimport { RemoteConfig as FirebaseRemoteConfig } from 'firebase/remote-config';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\n\n// see notes in core/firebase.app.module.ts for why we're building the class like this\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface RemoteConfig extends FirebaseRemoteConfig {}\n\nexport class RemoteConfig {\n  constructor(remoteConfig: FirebaseRemoteConfig) {\n    return remoteConfig;\n  }\n}\n\nexport const REMOTE_CONFIG_PROVIDER_NAME = 'remote-config';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface RemoteConfigInstances extends Array<FirebaseRemoteConfig> {}\n\nexport class RemoteConfigInstances {\n  constructor() {\n    return ɵgetAllInstancesOf<FirebaseRemoteConfig>(REMOTE_CONFIG_PROVIDER_NAME);\n  }\n}\n\nexport const remoteConfigInstance$ = timer(0, 300).pipe(\n  concatMap(() => from(ɵgetAllInstancesOf<FirebaseRemoteConfig>(REMOTE_CONFIG_PROVIDER_NAME))),\n  distinct(),\n);\n","import { ɵisSupportedError } from '@angular/fire';\nimport { isSupported } from 'firebase/remote-config';\n\nconst isRemoteConfigSupportedValueSymbol = '__angularfire_symbol__remoteConfigIsSupportedValue';\nconst isRemoteConfigSupportedPromiseSymbol = '__angularfire_symbol__remoteConfigIsSupported';\n\nglobalThis[isRemoteConfigSupportedPromiseSymbol] ||= isSupported().then(it =>\n  globalThis[isRemoteConfigSupportedValueSymbol] = it\n).catch(() =>\n  globalThis[isRemoteConfigSupportedValueSymbol] = false\n);\n\nexport const isRemoteConfigSupportedFactory = {\n  async: () => globalThis[isRemoteConfigSupportedPromiseSymbol],\n  sync: () => {\n    const ret = globalThis[isRemoteConfigSupportedValueSymbol];\n    if (ret === undefined) { throw new Error(ɵisSupportedError('RemoteConfig')); }\n    return ret;\n  }\n};\n","import {\n  APP_INITIALIZER,\n  EnvironmentProviders,\n  InjectionToken,\n  Injector,\n  NgModule,\n  NgZone,\n  Optional,\n  makeEnvironmentProviders,\n} from '@angular/core';\nimport { VERSION, ɵAngularFireSchedulers, ɵgetDefaultInstanceOf } from '@angular/fire';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { RemoteConfig as FirebaseRemoteConfig } from 'firebase/remote-config';\nimport { isRemoteConfigSupportedFactory } from './is-remote-config-supported-factory';\nimport { REMOTE_CONFIG_PROVIDER_NAME, RemoteConfig, RemoteConfigInstances } from './remote-config';\n\nexport const PROVIDED_REMOTE_CONFIG_INSTANCES = new InjectionToken<RemoteConfig[]>('angularfire2.remote-config-instances');\n\nexport function defaultRemoteConfigInstanceFactory(\n  provided: FirebaseRemoteConfig[]|undefined,\n  defaultApp: FirebaseApp,\n) {\n  if (!isRemoteConfigSupportedFactory.sync()) { return null; }\n  const defaultRemoteConfig = ɵgetDefaultInstanceOf<FirebaseRemoteConfig>(REMOTE_CONFIG_PROVIDER_NAME, provided, defaultApp);\n  return defaultRemoteConfig && new RemoteConfig(defaultRemoteConfig);\n}\n\nexport function remoteConfigInstanceFactory(fn: (injector: Injector) => FirebaseRemoteConfig) {\n  return (zone: NgZone, injector: Injector) => {\n    if (!isRemoteConfigSupportedFactory.sync()) { return null; }\n    const remoteConfig = zone.runOutsideAngular(() => fn(injector));\n    return new RemoteConfig(remoteConfig);\n  };\n}\n\nconst REMOTE_CONFIG_INSTANCES_PROVIDER = {\n  provide: RemoteConfigInstances,\n  deps: [\n    [new Optional(), PROVIDED_REMOTE_CONFIG_INSTANCES ],\n  ]\n};\n\nconst DEFAULT_REMOTE_CONFIG_INSTANCE_PROVIDER = {\n  provide: RemoteConfig,\n  useFactory: defaultRemoteConfigInstanceFactory,\n  deps: [\n    [new Optional(), PROVIDED_REMOTE_CONFIG_INSTANCES ],\n    FirebaseApp,\n  ]\n};\n\n@NgModule({\n  providers: [\n    DEFAULT_REMOTE_CONFIG_INSTANCE_PROVIDER,\n    REMOTE_CONFIG_INSTANCES_PROVIDER,\n    {\n      provide: APP_INITIALIZER,\n      useValue: isRemoteConfigSupportedFactory.async,\n      multi: true,\n    },\n  ]\n})\nexport class RemoteConfigModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'rc');\n  }\n}\n\nexport function provideRemoteConfig(\n  fn: (injector: Injector) => FirebaseRemoteConfig, ...deps: any[]\n): EnvironmentProviders {\n  registerVersion('angularfire', VERSION.full, 'rc');\n\n  return makeEnvironmentProviders([\n    DEFAULT_REMOTE_CONFIG_INSTANCE_PROVIDER,\n    REMOTE_CONFIG_INSTANCES_PROVIDER,\n    {\n      provide: APP_INITIALIZER,\n      useValue: isRemoteConfigSupportedFactory.async,\n      multi: true,\n    },\n    {\n      provide: PROVIDED_REMOTE_CONFIG_INSTANCES,\n      useFactory: remoteConfigInstanceFactory(fn),\n      multi: true,\n      deps: [\n        NgZone,\n        Injector,\n        ɵAngularFireSchedulers,\n        FirebaseApps,\n        ...deps,\n      ]\n    }\n  ]);\n}\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  getValue as _getValue,\n  getString as _getString,\n  getNumber as _getNumber,\n  getBoolean as _getBoolean,\n  getAll as _getAll\n} from 'rxfire/remote-config';\n\nexport const getValueChanges = ɵzoneWrap(_getValue, true);\nexport const getStringChanges = ɵzoneWrap(_getString, true);\nexport const getNumberChanges = ɵzoneWrap(_getNumber, true);\nexport const getBooleanChanges = ɵzoneWrap(_getBoolean, true);\nexport const getAllChanges = ɵzoneWrap(_getAll, true);\n","import { isRemoteConfigSupportedFactory } from './is-remote-config-supported-factory';\n\nexport const isSupported = isRemoteConfigSupportedFactory.async;\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nexport * from 'firebase/remote-config';\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  activate as _activate,\n  ensureInitialized as _ensureInitialized,\n  fetchAndActivate as _fetchAndActivate,\n  fetchConfig as _fetchConfig,\n  getAll as _getAll,\n  getBoolean as _getBoolean,\n  getNumber as _getNumber,\n  getRemoteConfig as _getRemoteConfig,\n  getString as _getString,\n  getValue as _getValue,\n  setLogLevel as _setLogLevel\n} from 'firebase/remote-config';\n\nexport {\n  isSupported\n} from './overrides';\n\nexport const activate = ɵzoneWrap(_activate, true);\nexport const ensureInitialized = ɵzoneWrap(_ensureInitialized, true);\nexport const fetchAndActivate = ɵzoneWrap(_fetchAndActivate, true);\nexport const fetchConfig = ɵzoneWrap(_fetchConfig, true);\nexport const getAll = ɵzoneWrap(_getAll, true);\nexport const getBoolean = ɵzoneWrap(_getBoolean, true);\nexport const getNumber = ɵzoneWrap(_getNumber, true);\nexport const getRemoteConfig = ɵzoneWrap(_getRemoteConfig, true);\nexport const getString = ɵzoneWrap(_getString, true);\nexport const getValue = ɵzoneWrap(_getValue, true);\nexport const setLogLevel = ɵzoneWrap(_setLogLevel, true);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["ɵgetAllInstancesOf","isSupported","ɵisSupportedError","ɵgetDefaultInstanceOf","ɵAngularFireSchedulers","ɵzoneWrap","_getValue","_getString","_getNumber","_getBoolean","_getAll","_activate","_ensureInitialized","_fetchAndActivate","_fetchConfig","_getRemoteConfig","_setLogLevel"],"mappings":"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"}