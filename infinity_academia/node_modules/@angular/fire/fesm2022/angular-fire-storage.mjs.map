{"version":3,"file":"angular-fire-storage.mjs","sources":["../../../src/storage/storage.ts","../../../src/storage/storage.module.ts","../../../src/storage/rxfire.ts","../../../src/storage/firebase.ts","../../../src/storage/angular-fire-storage.ts"],"sourcesContent":["import { ɵgetAllInstancesOf } from '@angular/fire';\nimport { FirebaseStorage } from 'firebase/storage';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\n\n// see notes in core/firebase.app.module.ts for why we're building the class like this\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Storage extends FirebaseStorage {}\n\nexport class Storage {\n  constructor(auth: FirebaseStorage) {\n    return auth;\n  }\n}\n\nexport const STORAGE_PROVIDER_NAME = 'storage';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface StorageInstances extends Array<FirebaseStorage> {}\n\nexport class StorageInstances {\n  constructor() {\n    return ɵgetAllInstancesOf<FirebaseStorage>(STORAGE_PROVIDER_NAME);\n  }\n}\n\nexport const storageInstance$ = timer(0, 300).pipe(\n  concatMap(() => from(ɵgetAllInstancesOf<FirebaseStorage>(STORAGE_PROVIDER_NAME))),\n  distinct(),\n);\n","import {\n  EnvironmentProviders,\n  InjectionToken,\n  Injector,\n  NgModule,\n  NgZone,\n  Optional,\n  makeEnvironmentProviders,\n} from '@angular/core';\nimport { VERSION, ɵAngularFireSchedulers, ɵgetDefaultInstanceOf } from '@angular/fire';\nimport { ɵAppCheckInstances } from '@angular/fire';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { FirebaseStorage } from 'firebase/storage';\nimport { STORAGE_PROVIDER_NAME, Storage, StorageInstances } from './storage';\n\nexport const PROVIDED_STORAGE_INSTANCES = new InjectionToken<Storage[]>('angularfire2.storage-instances');\n\nexport function defaultStorageInstanceFactory(provided: FirebaseStorage[]|undefined, defaultApp: FirebaseApp) {\n  const defaultStorage = ɵgetDefaultInstanceOf<FirebaseStorage>(STORAGE_PROVIDER_NAME, provided, defaultApp);\n  return defaultStorage && new Storage(defaultStorage);\n}\n\nexport function storageInstanceFactory(fn: (injector: Injector) => FirebaseStorage) {\n  return (zone: NgZone, injector: Injector) => {\n    const storage = zone.runOutsideAngular(() => fn(injector));\n    return new Storage(storage);\n  };\n}\n\nconst STORAGE_INSTANCES_PROVIDER = {\n  provide: StorageInstances,\n  deps: [\n    [new Optional(), PROVIDED_STORAGE_INSTANCES ],\n  ]\n};\n\nconst DEFAULT_STORAGE_INSTANCE_PROVIDER = {\n  provide: Storage,\n  useFactory: defaultStorageInstanceFactory,\n  deps: [\n    [new Optional(), PROVIDED_STORAGE_INSTANCES ],\n    FirebaseApp,\n  ]\n};\n\n@NgModule({\n  providers: [\n    DEFAULT_STORAGE_INSTANCE_PROVIDER,\n    STORAGE_INSTANCES_PROVIDER,\n  ]\n})\nexport class StorageModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'gcs');\n  }\n}\n\nexport function provideStorage(fn: (injector: Injector) => FirebaseStorage, ...deps: any[]): EnvironmentProviders {\n  registerVersion('angularfire', VERSION.full, 'gcs');\n\n  return makeEnvironmentProviders([\n    DEFAULT_STORAGE_INSTANCE_PROVIDER,\n    STORAGE_INSTANCES_PROVIDER,\n    {\n      provide: PROVIDED_STORAGE_INSTANCES,\n      useFactory: storageInstanceFactory(fn),\n      multi: true,\n      deps: [\n        NgZone,\n        Injector,\n        ɵAngularFireSchedulers,\n        FirebaseApps,\n        // Defensively load Auth first, if provided\n        [new Optional(), AuthInstances ],\n        [new Optional(), ɵAppCheckInstances ],\n        ...deps,\n      ]\n    }\n  ]);\n}\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  fromTask as _fromTask,\n  percentage as _percentage\n} from 'rxfire/storage';\n\nexport const fromTask = ɵzoneWrap(_fromTask, true);\nexport const percentage = ɵzoneWrap(_percentage, true);\n","// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nexport * from 'firebase/storage';\nimport { ɵzoneWrap } from '@angular/fire';\nimport {\n  connectStorageEmulator as _connectStorageEmulator,\n  deleteObject as _deleteObject,\n  getBlob as _getBlob,\n  getBytes as _getBytes,\n  getDownloadURL as _getDownloadURL,\n  getMetadata as _getMetadata,\n  getStorage as _getStorage,\n  getStream as _getStream,\n  list as _list,\n  listAll as _listAll,\n  ref as _ref,\n  updateMetadata as _updateMetadata,\n  uploadBytes as _uploadBytes,\n  uploadBytesResumable as _uploadBytesResumable,\n  uploadString as _uploadString\n} from 'firebase/storage';\n\nexport const connectStorageEmulator = ɵzoneWrap(_connectStorageEmulator, true);\nexport const deleteObject = ɵzoneWrap(_deleteObject, true);\nexport const getBlob = ɵzoneWrap(_getBlob, true);\nexport const getBytes = ɵzoneWrap(_getBytes, true);\nexport const getDownloadURL = ɵzoneWrap(_getDownloadURL, true);\nexport const getMetadata = ɵzoneWrap(_getMetadata, true);\nexport const getStorage = ɵzoneWrap(_getStorage, true);\nexport const getStream = ɵzoneWrap(_getStream, true);\nexport const list = ɵzoneWrap(_list, true);\nexport const listAll = ɵzoneWrap(_listAll, true);\nexport const ref = ɵzoneWrap(_ref, true);\nexport const updateMetadata = ɵzoneWrap(_updateMetadata, true);\nexport const uploadBytes = ɵzoneWrap(_uploadBytes, true);\nexport const uploadBytesResumable = ɵzoneWrap(_uploadBytesResumable, true);\nexport const uploadString = ɵzoneWrap(_uploadString, true);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","ɵAngularFireSchedulers","ɵAppCheckInstances","ɵzoneWrap","_fromTask","_percentage","_connectStorageEmulator","_deleteObject","_getBlob","_getBytes","_getDownloadURL","_getMetadata","_getStorage","_getStream","_list","_listAll","_ref","_updateMetadata","_uploadBytes","_uploadBytesResumable","_uploadString"],"mappings":"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"}